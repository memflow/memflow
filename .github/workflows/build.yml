name: Build and test

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo build
      uses: actions/cache@v1
      env:
        cache-name: cargo-build-target
    - name: Build
      run: cargo build --all --all-features --verbose
    - name: Build examples
      run: cargo build --all --all-features --examples --verbose

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo build
      uses: actions/cache@v1
      env:
        cache-name: cargo-build-target
    - name: Run all tests
      run: cargo test --all --all-features --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: rustup component add clippy
    - name: Cache cargo build
      uses: actions/cache@v1
      env:
        cache-name: cargo-build-target
    - name: Check formatting
      run: cargo fmt -- --check
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --all-features

  build-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo build
        uses: actions/cache@v1
        env:
          cache-name: cargo-build-target-coverage
        with:
          path: target
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Download grcov
        run: |
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
      - name: Run tests with coverage
        run: |
          export PATH=$PATH:.
          make coverage-lcov COVERAGE_CACHE=1
          bash <(curl -s https://codecov.io/bash) -s ./target/cov/ -t ${CODECOV_TOKEN};
